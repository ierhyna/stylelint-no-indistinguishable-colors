// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`stylelint-no-indistinguishable-colors allowEquivalentNotation should disable equivalent notation 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": true,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [
        Object {
          "column": 20,
          "endColumn": 38,
          "endLine": 1,
          "line": 1,
          "rule": "plugin/stylelint-no-indistinguishable-colors",
          "severity": "error",
          "text": Any<String>,
        },
        Object {
          "column": 39,
          "endColumn": 68,
          "endLine": 1,
          "line": 1,
          "rule": "plugin/stylelint-no-indistinguishable-colors",
          "severity": "error",
          "text": Any<String>,
        },
        Object {
          "column": 39,
          "endColumn": 68,
          "endLine": 1,
          "line": 1,
          "rule": "plugin/stylelint-no-indistinguishable-colors",
          "severity": "error",
          "text": Any<String>,
        },
      ],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors allowEquivalentNotation should enable equivalent notation 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors false option should disable rule 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors ignore should ignore selected colors 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors incorrect parameters should display error on incorrect arguments 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": true,
      "invalidOptionWarnings": Array [
        Object {
          "text": Any<String>,
        },
      ],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors incorrect parameters should display error on incorrect options 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": true,
      "invalidOptionWarnings": Array [
        Object {
          "text": Any<String>,
        },
      ],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors no side-effects should ignore color names in font-family 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors threshold should set higher threshold 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": true,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [
        Object {
          "column": 20,
          "endColumn": 37,
          "endLine": 1,
          "line": 1,
          "rule": "plugin/stylelint-no-indistinguishable-colors",
          "severity": "error",
          "text": Any<String>,
        },
      ],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors threshold should set lower threshold 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors true option should enable rule 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": true,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [
        Object {
          "column": 20,
          "endColumn": 40,
          "endLine": 1,
          "line": 1,
          "rule": "plugin/stylelint-no-indistinguishable-colors",
          "severity": "error",
          "text": Any<String>,
        },
      ],
    },
  ],
}
`;

exports[`stylelint-no-indistinguishable-colors whitelist should ignore selected color pairs 1`] = `
Object {
  "Result": Array [
    Object {
      "deprecations": Array [],
      "errored": false,
      "invalidOptionWarnings": Array [],
      "parseErrors": Array [],
      "source": StringMatching /\\^<input\\.\\*css\\.\\*>\\$/,
      "warnings": Array [],
    },
  ],
}
`;
